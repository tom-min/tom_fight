; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\stm32f10x_it.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Libraries\CMSIS\CM3\CoreSupport -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -I.\main -I.\User -I.\User\include -I.\fatfs -I.\Utilities\STM32_EVAL -I.\Utilities\STM32_EVAL\Common -I.\Utilities\STM32_EVAL\STM3210E_EVAL -I.\UCOSII\CORE -I.\UCOSII\PORTS -I.\UCOSII\CONFIG -I.\RTE\_Target_1 -I"D:\program files (x86)\keil5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -I"D:\program files (x86)\keil5\ARM\CMSIS\Include" -D__UVISION_VERSION=523 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL --omf_browse=.\objects\stm32f10x_it.crf main\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;82       */
;;;83     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;84     {
;;;85       /* Go to infinite loop when Bus Fault exception occurs */
;;;86       while (1)
000002  e7fe              B        |L1.2|
;;;87       {
;;;88       }
;;;89     }
;;;90     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;117      */
;;;118    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;119    {
;;;120    }
;;;121    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;56       */
;;;57     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L3.2|
;;;58     {
;;;59       /* Go to infinite loop when Hard Fault exception occurs */
;;;60       while (1)
000002  e7fe              B        |L3.2|
;;;61       {
;;;62       }
;;;63     }
;;;64     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;69       */
;;;70     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;71     {
;;;72       /* Go to infinite loop when Memory Manage exception occurs */
;;;73       while (1)
000002  e7fe              B        |L4.2|
;;;74       {
;;;75       }
;;;76     }
;;;77     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;47       */
;;;48     void NMI_Handler(void)
000000  4770              BX       lr
;;;49     {
;;;50     }
;;;51     
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;108      */
;;;109    void SVC_Handler(void)
000000  4770              BX       lr
;;;110    {
;;;111    }
;;;112    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;139      */
;;;140    void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;141    {
;;;142    	//编写与SysTick定时器中断操作相关的API函数调用
;;;143    	OSIntEnter();  //ucos进入中断
000002  f7fffffe          BL       OSIntEnter
;;;144    	OSTimeTick();  //调用ucos的时钟服务函数
000006  f7fffffe          BL       OSTimeTick
;;;145    	OSIntExit();  //ucos退出中断
00000a  f7fffffe          BL       OSIntExit
;;;146    }
00000e  bd10              POP      {r4,pc}
;;;147    
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;95       */
;;;96     void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L8.2|
;;;97     {
;;;98       /* Go to infinite loop when Usage Fault exception occurs */
;;;99       while (1)
000002  e7fe              B        |L8.2|
;;;100      {
;;;101      }
;;;102    }
;;;103    
                          ENDP

